#!/bin/env python

from NFTest import *

phy2loop0 = ('../connections/conn', [])

hdr=scapy.TCP()
hdr.sport=1025
hdr.dport=80

nftest_init(sim_loop = [], hw_config = [phy2loop0])
nftest_start()
#nftest_fpga_reset()

TTL = 64

port1 = 80
port2 = 1010

NUM_PKTS = 1 

eth_hdr=14
ipv4_hdr=20
tcp_hdr=20

load = ''
lengthh = 10
for genr in range(lengthh):
   load += chr(randint(0,255))

seqn=0

DA = "0xD0:0x27:0x88:0xBC:0xA8:0xE9"
SA = "0x0:0x4E:0x46:0x32:0x43:0x0"
DST_IP = '192.168.101.10'
SRC_IP = '192.168.101.20'

for i in range(NUM_PKTS):
   hdr.dport=port1
   hdr.sport=port2
   hdr.flags = 0b00010
   pkt = scapy.Ether(dst=DA, src=SA)/scapy.IP(dst=DST_IP, 
         src=SRC_IP, ttl=TTL)/hdr/load
   pkt.len = (len(load))+eth_hdr+ipv4_hdr+tcp_hdr
   seqn = i*(pkt.len+1)
   pkt.seq = seqn 

   nftest_send_phy('nf2c0', pkt)
   nftest_expect_dma('nf2c0', pkt)

#ACK+DATA
for i in range(NUM_PKTS):
   hdr.dport=port2
   hdr.sport=port1
   hdr.flags = 0b10010
   pkt = scapy.Ether(dst=SA, src=DA)/scapy.IP(dst=SRC_IP,
          src=DST_IP, ttl=TTL)/hdr/load
   pkt.len = (len(load))+eth_hdr+ipv4_hdr+tcp_hdr
   #seqn = (i+1)*(pkt.len+1)
   pkt.seq = seqn 
   #pkt.ack = seqn+pkt.len+1
   pkt.ack = (i+1)*(pkt.len+1)

   nftest_send_phy('nf2c0', pkt)
   nftest_expect_dma('nf2c0', pkt)

nftest_finish()
