#!/usr/bin/perl

# Take the mem_interface_top.ucf file as generated by the
# Xilinx MIG tool, and fix it up for use in our UCF.
#
# usage: fix_mem_interface_top_ucf.pl <ucf file>
#
# will print new UCF to stdout. pipe it to a file then read it
# in to our main ucf

use strict;

print "# This is UCF generated by MIG, but modified by fix_mem_interface_top_ucf.pl\n";
print "# to work with our UCF.\n\n";

my $loc_count  = 0;

while(<>) {

  # 1. change all SYS_CLK to ddr_clk_200

  s/SYS_CLK/ddr_clk_200/g;

  # 2. comment out  lines with  NET "reset_in"

  s/(NET\s+"reset_in".*)/\# $1/;

  # DONT DO THIS NOW _ WE HAVE ROTATED THE PINOUT
  # Change pin locs of diff pecl clock input
  #
  #s/"AH17"/"J18"/;
  #s/"AJ17"/"H18"/;

  # add wildcard to "infrastructure...."

  s/\A \s* INST \s+ \"infrastructure/INST \"\*infrastructure/xms;

  # fix sys_rst hier
  s/NET\s+"sys_rst\*"\s+TIG;/NET "*\/sys_rst\*" TIG;/;


  # remove led_error lines

  if ( m/led_error/) { $_ = '# '.$_ }

  # fix hierarchy for the dqs signals

  s{(ddr2_top0\/dqs_int_delay_in\d)}
    {mem_interface_top\/$1}xms;

  # DONT DO THIS NOW _ WE HAVE ROTATED THE PINOUT
  # Change DCM locations:   X2Y0 -> X1Y1
  #                         X3Y0 -> X0Y1
  #
  # s/DCM_X2Y0/DCM_X1Y1/;
  # s/DCM_X3Y0/DCM_X0Y1/;

  # CHange the LOC constraints to move the DCM and Calibration logic
  # from the X7xYx region to the opposite side of the chip.
  # so X91Y0 -> X0Y159
  #
  #while (/SLICE_X([5-7]\d+)Y(\d+)/) {
  #  my $newx = 91 - $1;
  #  my $newy = 159 - $2;
  #  my $slice = 'SLICE_X' . $newx . 'Y' . $newy;
  #  s/SLICE_X[5-7]\d+Y\d+/$slice/;
  #  $loc_count++;
  #}

  # Add the IOSTANDARD constraints for the dqs and dqs_n

  if (/NET\s+"cntrl0_ddr2_dm\(\*\)"\s+IOSTANDARD\s+=\s+SSTL18_II;/) {
    print '# Adding SSTL18_II constraints for dqs and dqs_n'."\n";
    print 'NET "cntrl0_ddr2_dqs(*)"                     IOSTANDARD = DIFF_SSTL18_II;'."\n";
    print 'NET "cntrl0_ddr2_dqs_n(*)"                  IOSTANDARD = DIFF_SSTL18_II;'."\n";
  }

  # Move the BUFGMUX locations 6P->3S  and 7S -> 0P
  s/BUFGMUX6P/BUFGMUX3S/;
  s/BUFGMUX7S/BUFGMUX0P/;


  print;

}
#  print stderr "loc count is $loc_count\n";
